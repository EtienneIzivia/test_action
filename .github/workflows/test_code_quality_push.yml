name: Python Code Quality and Security Check for Push

on: push

jobs:
  check_code_quality_and_security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Récupère tout l'historique pour les comparaisons de commits

    - name: Get changed files
      id: changed-files
      run: |
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '\.py$' | xargs)
          echo "changed_files=$changed_files" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install flake8 and  and Pylint
      run: |
        pip install flake8
        pip install bandit
        pip install pylint

    - name: Check style of the code
      if: env.changed_files
      run: |
          flake8 $changed_files > flake8_output.txt 2>&1 || echo "flake8 Errors detected"
          if [ -s flake8_output.txt ]; then
            echo "FLAKE8_FAILED=1" >> $GITHUB_ENV
          fi
  
    - name: Display style problem if any
      if: env.FLAKE8_FAILED == '1'
      run: cat flake8_output.txt


    - name: Check quality of the code
      if: env.changed_files
      run: |
          pylint $changed_files > pylint_output.txt 2>&1 || echo "pylint Errors detected"
          if [ -s pylint_output.txt ]; then
            echo "PYLINT_FAILED=1" >> $GITHUB_ENV
          fi

    - name: Display problem of quality if any
      if: env.PYLINT_FAILED == '1'
      run: cat pylint_output.txt

    - name: Check security problem
      if: env.changed_files
      run: |
          bandit -r $changed_files -o bandit_output.txt || echo "BANDIT_FAILED=1" >> $GITHUB_ENV
  
    - name: Display security problem if any
      if: env.BANDIT_FAILED == '1'
      run: cat bandit_output.txt

    - name: Check if Action need to fail
      if: env.BANDIT_FAILED=='1' || env.FLAKE8_FAILED=='1' || env.PYLINT_FAILED=='1'
      run: exit 1
